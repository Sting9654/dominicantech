//CREACION DE LA BASE DE DATOS

CREATE DATABASE DOMINICAN_TECH_CO;

//CREACION DE LAS TABLAS

//TABLA PRODUCTOS

CREATE TABLE TBL_PRODUCT(
    PROD_ID INT AUTO_INCREMENT PRIMARY KEY,
    PROD_NAME VARCHAR(50) NOT NULL,
    PROD_DESCRIPTION TEXT,
    PROD_UNIT_PRICE DECIMAL(10,2) DEFAULT 0,
    PROD_STOCK INT,
    PROD_AVAILABLE BOOLEAN DEFAULT TRUE,
    PROD_CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
    )

//TABLA CLIENTES

CREATE TABLE TBL_CLIENT(
	CLI_ID INT PRIMARY KEY AUTO_INCREMENT,
    CLI_NAME VARCHAR(50) NOT NULL,
    CLI_LAST_NAME VARCHAR(50) NOT NULL,
    CLI_EMAIL VARCHAR(255),
    CLI_RNC CHAR(9) NOT NULL UNIQUE,
    CLI_ADDRESS TEXT NOT NULL,
    CLI_CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)

//INSERCION DE CLIENTES

INSERT INTO TBL_CLIENT (CLI_NAME, CLI_LAST_NAME, CLI_EMAIL, CLI_RNC, CLI_ADDRESS) VALUES
('Juan', 'Perez', 'juan.perez@example.com', '123456789', '123 Main St, Santo Domingo'),
('Maria', 'Gomez', 'maria.gomez@example.com', '987654321', '456 Elm St, Santo Domingo'),
('Carlos', 'Rodriguez', 'carlos.rodriguez@example.com', '456789123', '789 Oak St, Santo Domingo');


//TABLA OPERACIONES

CREATE TABLE TBL_OPERATION(
	OP_ID INT PRIMARY KEY AUTO_INCREMENT,
    OP_NAME VARCHAR(50) NOT NULL,
    OP_DESCRIPTION TEXT,
    OP_CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)

//INSERCION DE OPERACIONES

INSERT INTO `tbl_operation` (`OP_ID`, `OP_NAME`, `OP_DESCRIPTION`, `OP_CREATED_AT`) VALUES (NULL, 'ENTRADA', 'INGRESO DE PRODUCTO A TIENDA', current_timestamp()), (NULL, 'VENTA MAYORISTA', 'VENTA MAYORISTA', current_timestamp()), (NULL, 'VENTA MINORISTA', 'VENTA MINORISTA', current_timestamp());

//TABLA DE MOVIMIENTOS DE PRODUCTOS

CREATE TABLE TBL_MOV_INVENTORY (
    MOV_ID INT PRIMARY KEY AUTO_INCREMENT,
    MOV_OPERATION_ID INT NOT NULL,
    MOV_PRODUCT_ID INT NOT NULL,
    MOV_QUANTITY INT NOT NULL,
    MOV_CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (MOV_OPERATION_ID) REFERENCES TBL_OPERATION(OP_ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MOV_PRODUCT_ID) REFERENCES TBL_PRODUCT(PROD_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);

//INSERCIONES DE PRODUCTOS

INSERT INTO TBL_PRODUCT (PROD_NAME, PROD_DESCRIPTION, PROD_UNIT_PRICE, PROD_STOCK, PROD_AVAILABLE) VALUES
('DELL - OPTIPLEX SMALL FORM FACTOR PLUS 7020', 'COMPUTADORA DELL OPTIPLEX SMALL FORM FACTOR PLUS 7020, INTEL CORE I5 PROCESSOR 14500 (24MB CACHE, 14 CORES, 20 THREADS, UP TO 5.0 GHZ TURBO, 65W. RAM 16GB (1X16 GB) DDR5, DISCO M.2 2230 512GB PCIE NVME SSD CLASS 35. INTEL INTEGRATED GRAPHIC, 3X DISPLAY PORT, 8X DVD+/-RW 9.5MM, MOUSE + TECLADO SPANISH, WIN11 PRO, 3 AÑOS GARANTIA.', 1411.99, 100, TRUE),
('INTEL - NUC7I5DNKPC1', 'COMPUTADORA NUC INTEL NUC 7 BUSINESS MINI PC, CORE I5 VPRO, 8GB RAM, 256GB SSD', 858.68, 200, TRUE),
('HP - COMPUTADORA HP SMART BUY PRODESK 400 G6 SFF', 'COMPUTADORA HP SMART BUY PRODESK 400 G6 SFF, I5-9500, 256GB SSD, 8GB, DVD, W10 PRO', 919.81, 300, TRUE);

//TABLA DE ORDENES

CREATE TABLE TBL_ORDER (
	ORD_ID INT PRIMARY KEY AUTO_INCREMENT,
	ORD_TIPO_VENTA INT NOT NULL,
    ORD_CLIENT_ID INT NOT NULL,
    ORD_CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

FOREIGN KEY (ORD_TIPO_VENTA) REFERENCES tbl_operation(OP_ID) ON DELETE CASCADE ON UPDATE NO ACTION
        FOREIGN KEY (ORD_CLIENT_ID) REFERENCES tbl_client(CLI_ID) ON DELETE CASCADE ON UPDATE NO ACTION
)

//INSERCION DE 2 FACTURAS PARA SOLO 3 REGISTRO EN LA TABLA DE CLIENTES

INSERT INTO TBL_ORDER (ORD_TIPO_VENTA, ORD_CLIENT_ID)
SELECT 2, CLI_ID
FROM TBL_CLIENT
LIMIT 3;

//TABLA DETALLE ORDENES

CREATE TABLE TBL_ORDER_DETAIL(
	ODTL_ID INT PRIMARY KEY AUTO_INCREMENT,
    ODTL_ORDER_ID INT NOT NULL,
    ODTL_PRODUCT_ID INT NOT NULL,
    ODTL_QUANTITY INT NOT NULL,
    ODTL_DISCOUNTS DOUBLE DEFAULT 0,
    ODTL_UNIT_PRICE DECIMAL(10,2) NOT NULL,
    ODTL_TOTAL_PRICE DECIMAL(10,2) NOT NULL,

    FOREIGN KEY (ODTL_ORDER_ID) REFERENCES TBL_ORDER(ORD_ID) ON DELETE CASCADE ON UPDATE NO ACTION,
        FOREIGN KEY (ODTL_PRODUCT_ID) REFERENCES TBL_PRODUCT(PROD_ID) ON DELETE CASCADE ON UPDATE NO ACTION
)

//PROCESO DE ALMACENADO PARA PROCESAR VENTAS

DELIMITER //

CREATE OR REPLACE PROCEDURE CreateOrderDetailAndUpdateInventory(
    IN p_order_id INT,
    IN p_product_id INT,
    IN p_quantity INT,
    IN p_discounts DECIMAL(10,2),
    IN p_operation_id INT
)
BEGIN
    DECLARE v_unit_price DECIMAL(10, 2);

    SELECT PROD_UNIT_PRICE INTO v_unit_price
    FROM TBL_PRODUCT
    WHERE PROD_ID = p_product_id;

    INSERT INTO TBL_ORDER_DETAIL (ODTL_ORDER_ID, ODTL_PRODUCT_ID, ODTL_QUANTITY, ODTL_UNIT_PRICE, ODTL_TOTAL_PRICE)
    VALUES (p_order_id, p_product_id, p_quantity, v_unit_price, (v_unit_price * p_quantity) - (p_discounts * v_unit_price * p_quantity));

    INSERT INTO TBL_MOV_INVENTORY (MOV_OPERATION_ID, MOV_PRODUCT_ID, MOV_QUANTITY)
    VALUES (p_operation_id, p_product_id, p_quantity);
END //

DELIMITER ;

//LLAMADA AL PROCEDIMIENTO

CALL CreateOrderDetailAndUpdateInventory(1, 1, 10, 0.00, 2);
CALL CreateOrderDetailAndUpdateInventory(2, 2, 5, 0.00, 3);
CALL CreateOrderDetailAndUpdateInventory(3, 3, 2, 0.00, 2);
CALL CreateOrderDetailAndUpdateInventory(4, 1, 7, 0.00, 3);
CALL CreateOrderDetailAndUpdateInventory(5, 2, 3, 0.00, 2);
CALL CreateOrderDetailAndUpdateInventory(6, 3, 1, 0.00, 3);

//CONSULTA PARA OBTENER PRODUCTOS CON DISPONIBILIDAD DE INVENTARIO

SELECT * FROM `tbl_product` WHERE PROD_STOCK > 0

//CONSULTA PARA VER LAS ORDENES FILTRADAS POR ID

SELECT O.*, C.CLI_NAME, C.CLI_LAST_NAME, C.CLI_EMAIL
FROM tbl_order o
JOIN tbl_client c ON o.ORD_CLIENT_ID = c.CLI_ID
WHERE o.ORD_CLIENT_ID = 1;

//CONSULTA PARA Encontrar todos los detalle_orden de una orden en específico

SELECT od.ODTL_ID, od.ODTL_ORDER_ID, p.PROD_NAME, p.PROD_DESCRIPTION, od.ODTL_QUANTITY
FROM TBL_ORDER_DETAIL od
JOIN TBL_PRODUCT p ON od.ODTL_PRODUCT_ID = p.PROD_ID
WHERE od.ODTL_ID = 2;



